"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("app/layout",{

/***/ "(app-pages-browser)/./app/globals.css":
/*!*************************!*\
  !*** ./app/globals.css ***!
  \*************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (\"32050acc21ca\");\nif (true) { module.hot.accept() }\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL2FwcC9nbG9iYWxzLmNzcyIsIm1hcHBpbmdzIjoiOzs7O0FBQUEsaUVBQWUsY0FBYztBQUM3QixJQUFJLElBQVUsSUFBSSxpQkFBaUIiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9hcHAvZ2xvYmFscy5jc3M/YjJmNCJdLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQgZGVmYXVsdCBcIjMyMDUwYWNjMjFjYVwiXG5pZiAobW9kdWxlLmhvdCkgeyBtb2R1bGUuaG90LmFjY2VwdCgpIH1cbiJdLCJuYW1lcyI6W10sImlnbm9yZUxpc3QiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(app-pages-browser)/./app/globals.css\n"));

/***/ }),

/***/ "(app-pages-browser)/./app/services/tmdb.ts":
/*!******************************!*\
  !*** ./app/services/tmdb.ts ***!
  \******************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   fetchFromTMDB: () => (/* binding */ fetchFromTMDB),\n/* harmony export */   getMovieDetails: () => (/* binding */ getMovieDetails),\n/* harmony export */   getTrendingMovies: () => (/* binding */ getTrendingMovies),\n/* harmony export */   movieService: () => (/* binding */ movieService),\n/* harmony export */   queryKeys: () => (/* binding */ queryKeys)\n/* harmony export */ });\nconst BASE_URL = \"https://api.themoviedb.org/3\";\nconst API_KEY = \"780b88970918c0beb0ee93c95b86efe6\";\nconst getTrendingMovies = async ()=>{\n    const response = await fetch(\"\".concat(BASE_URL, \"/trending/movie/week?api_key=\").concat(API_KEY));\n    return response.json();\n};\nconst getMovieDetails = async (movieId)=>{\n    const response = await fetch(\"\".concat(BASE_URL, \"/movie/\").concat(movieId, \"?api_key=\").concat(API_KEY));\n    return response.json();\n};\nasync function fetchFromTMDB(endpoint) {\n    try {\n        const separator = endpoint.includes(\"?\") ? \"&\" : \"?\";\n        const response = await fetch(\"\".concat(BASE_URL).concat(endpoint).concat(separator, \"api_key=\").concat(API_KEY, \"&language=fr-FR\"));\n        if (!response.ok) {\n            throw new Error(\"HTTP error! status: \".concat(response.status));\n        }\n        return response.json();\n    } catch (error) {\n        console.error(\"TMDB Error:\", error);\n        throw new Error(\"Error while fetching data\");\n    }\n}\n// Creating query keys for better organization\nconst queryKeys = {\n    trending: [\n        \"trending\"\n    ],\n    nowPlaying: [\n        \"nowPlaying\"\n    ],\n    upcoming: [\n        \"upcoming\"\n    ],\n    topRated: (page)=>[\n            \"topRated\",\n            page\n        ],\n    movieDetails: (id)=>[\n            \"movie\",\n            id\n        ],\n    search: (query)=>[\n            \"search\",\n            query\n        ],\n    credits: (id)=>[\n            \"credits\",\n            id\n        ],\n    genres: [\n        \"genres\"\n    ],\n    moviesByGenre: (genreId, page)=>[\n            \"moviesByGenre\",\n            genreId,\n            page\n        ],\n    recommendations: (id)=>[\n            \"recommendations\",\n            id\n        ]\n};\n// The service remains the same but will be used in hooks\nconst movieService = {\n    getTrending: ()=>fetchFromTMDB(\"/trending/movie/week\"),\n    getNowPlaying: ()=>fetchFromTMDB(\"/movie/now_playing\"),\n    getUpcoming: ()=>fetchFromTMDB(\"/movie/upcoming\"),\n    getTopRated: function() {\n        let page = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : 1;\n        return fetchFromTMDB(\"/movie/top_rated?page=\".concat(page));\n    },\n    getMovieDetails: (id)=>fetchFromTMDB(\"/movie/\".concat(id)),\n    searchMovies: (query)=>fetchFromTMDB(\"/search/movie?query=\".concat(encodeURIComponent(query))),\n    getMovieCredits: (id)=>fetchFromTMDB(\"/movie/\".concat(id, \"/credits\")),\n    getGenres: ()=>fetchFromTMDB(\"/genre/movie/list\"),\n    getMoviesByGenre: function(genreId) {\n        let page = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : 1;\n        return fetchFromTMDB(\"/discover/movie?with_genres=\".concat(genreId, \"&sort_by=vote_average.desc&vote_count.gte=100&page=\").concat(page));\n    },\n    getGenreById: async (id)=>{\n        const genres = await fetch(\"\".concat(BASE_URL, \"/genre/movie/list?api_key=\").concat(API_KEY)).then((res)=>res.json());\n        return genres.genres.find((genre)=>genre.id.toString() === id);\n    },\n    getMovieVideos: (id)=>fetchFromTMDB(\"/movie/\".concat(id, \"/videos\")),\n    getSimilarMovies: async (id)=>{\n        var _movie_genres;\n        const movie = await fetchFromTMDB(\"/movie/\".concat(id));\n        const genreIds = (_movie_genres = movie.genres) === null || _movie_genres === void 0 ? void 0 : _movie_genres.map((g)=>g.id).join(\",\");\n        return fetchFromTMDB(\"/discover/movie?\" + new URLSearchParams({\n            with_genres: genreIds,\n            sort_by: \"popularity.desc\",\n            \"vote_count.gte\": \"100\",\n            \"vote_average.gte\": \"6.0\",\n            with_original_language: \"fr,en\",\n            page: \"1\",\n            without_movies: id\n        }));\n    },\n    getMovieRecommendations: (id)=>{\n        return fetchFromTMDB(\"/movie/\".concat(id, \"/recommendations?\") + new URLSearchParams({\n            sort_by: \"vote_average.desc\",\n            \"vote_count.gte\": \"100\",\n            with_original_language: \"fr,en\",\n            \"vote_average.gte\": \"6.0\",\n            page: \"1\"\n        }));\n    },\n    getWatchProviders: (id)=>{\n        return fetchFromTMDB(\"/movie/\".concat(id, \"/watch/providers\"));\n    }\n};\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./app/services/tmdb.ts\n"));

/***/ })

});